//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "zone")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub open_at: Time,
    pub close_at: Time,
    pub reservation_time: i32,
    pub club_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::club::Entity",
        from = "Column::ClubId",
        to = "super::club::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Club,
    #[sea_orm(has_many = "super::slot::Entity")]
    Slot,
}

impl Related<super::club::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Club.def()
    }
}

impl Related<super::slot::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Slot.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
